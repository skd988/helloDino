class Controller
{
	field Dino dino;
	field Array hazards;
	field int maxHazards;
	field int numOfHazards;
	field Random RNG;
	field int cycles;
	constructor Controller new(int size)
	{
		var int i;
		let dino = Dino.new();
		let RNG = Random.new(50);
		let hazards = Array.new(size);
		let maxHazards = size;
		let numOfHazards = 0;
		let cycles = 0;
		let i = 0;
		while(i < size){
			let hazards[i] = null;
			let i = i + 1;
		}
		return this;
	}
	
	method void dispose()
	{
		var Hazard hazard;
		var int i;
		let i = 0;
		while(i < numOfHazards)
		{
			let hazard = hazards[i];
			do hazard.dispose(); 
			let i = i + 1;
		}
		do hazards.dispose();
		do Memory.deAlloc(this);
		return;
	}
	
	method void run()
	{
		var int i;
		var Hazard hazard;
		var int block;
		while(~(dino.collide(hazards, numOfHazards)))
		{
			do dino.move(Keyboard.keyPressed());
			let i = 0;
			while(~(hazards[i] = null) & (i < maxHazards))
			{
				let hazard = hazards[i];
				if(~(hazard.move())){
					do deleteHazard(i);
				}
				else{
					do hazard.draw();
					let i = i + 1;
				}
			}
			
			if((MathPlus.modulu(cycles, 1024) = 0))
			{
				let hazards[numOfHazards] = Hazard.new(0, 1, 2);
				
				let numOfHazards = numOfHazards + 1;
			}
			
			do dino.draw(hazards);
			let cycles = cycles + 1;
		}
		return;
	}
	
	method void deleteHazard(int index)
	{
		var int i;
		var Hazard hazard;
		let hazard = hazards[index];
		do hazard.dispose();
		let numOfHazards = numOfHazards - 1;
		let i = index;
		while(i < numOfHazards)
		{
			let hazards[i] = hazards[i+1];
			let i = i + 1;
		}
		let hazards[i] = null;
		return;
	}
}

